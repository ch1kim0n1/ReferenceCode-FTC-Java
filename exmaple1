package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Gamepad;
import com.qualcomm.robotcore.hardware.HardwareMap;

@TeleOp(name = "TeleOpWithAuto")
@Disabled
public class TeleOpWithAuto extends LinearOpMode {
    private DcMotor leftMotor;
    private DcMotor rightMotor;
    private DcMotor armMotor;

    private static final double DRIVE_POWER = 0.8;
    private static final double ARM_POWER = 0.5;
    private static final long AUTO_FORWARD_TIME_MS = 4000; // 4 seconds

    @Override
    public void runOpMode() {
        leftMotor = hardwareMap.get(DcMotor.class, "leftMotor");
        rightMotor = hardwareMap.get(DcMotor.class, "rightMotor");
        armMotor = hardwareMap.get(DcMotor.class, "armMotor");

        leftMotor.setDirection(DcMotorSimple.Direction.FORWARD);
        rightMotor.setDirection(DcMotorSimple.Direction.REVERSE);
        armMotor.setDirection(DcMotorSimple.Direction.FORWARD);

        waitForStart();

        while (opModeIsActive()) {
            // Manual driving control with controller
            double drive = -gamepad1.left_stick_y;
            double turn = gamepad1.right_stick_x;
            double leftPower = DRIVE_POWER * (drive + turn);
            double rightPower = DRIVE_POWER * (drive - turn);

            leftMotor.setPower(leftPower);
            rightMotor.setPower(rightPower);

            // Arm control with buttons
            if (gamepad1.a) {
                armMotor.setPower(ARM_POWER);
            } else if (gamepad1.b) {
                armMotor.setPower(-ARM_POWER);
            } else {
                armMotor.setPower(0.0);
            }

            // Autonomous forward movement for 4 seconds
            if (getRuntime() < AUTO_FORWARD_TIME_MS / 1000.0) {
                leftMotor.setPower(DRIVE_POWER);
                rightMotor.setPower(DRIVE_POWER);
            }

            // End autonomous period after 4 seconds
            if (getRuntime() >= AUTO_FORWARD_TIME_MS / 1000.0) {
                leftMotor.setPower(0.0);
                rightMotor.setPower(0.0);
            }

            // Update telemetry
            telemetry.addData("Status", "Running");
            telemetry.addData("Left Power", leftPower);
            telemetry.addData("Right Power", rightPower);
            telemetry.update();

            idle();
        }
    }
}
